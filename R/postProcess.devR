# Can this be made into a function? I think the required arguments are the name of the logfile,
# which should be repeateable, and the log number. That way this doesn't need to be re-written
# each time, and also is less prone to error betweeen runs and analyses.
# Another argument required is the file path to the root of the analysis.
# This is probably only relevant for simulation, but will save time anyway. Also, the plots of
# mean branch lengths vs starter tree are perhaps useful in any instance.
# Starter tree is fed in from elsewhere as well, since it's location is variable.

# It might also be sensible to remove diagnostic plots from this, and just make it a thing to plot
# figures related to trees, depending on what the parameters of the model are.

# Expected file structure is as follows.

# ROOT
#   POSTPROCESS_FIGS
#   LOG-1
#   LOG-2 etc.


postProcess <- function(rootdir, log, lognum, startertree, truetree, node = NULL) {
  # Once this is done, these can be removed and included in the package imports.
  library(hfgr)
  library(BTRTools)
  library(ggplot2)
  library(geiger)
  library(phytools)
  library(ape)
  library(ggplot2)
  
  rootdir <- rootdir
  setwd(rootdir)
  
  lognumber <- paste0("logs-", lognum)

  setwd(paste0(rootdir, "/", lognumber))
  
  # load logs and posterior of trees.
  
  rj <- read.nexus(paste0(log, ".VarRates.trees"))
  
  setwd(paste0(rootdir, "figures"))

  # Plot the posterior of the Likelihood.
  pdf(file= paste0(log, ".", lognum, ".", "Lh-posterior", ".pdf"), paper= "a4")
    paramDiagnostic(log, pars = "Lh")
  dev.off()
  
  # get branch length data for plots.
  dat <- data.frame(starter = startertree$edge.length, rj = meanBranches(rj))
  
  if (isDefined(truetree)) {
    dat <- data.frame(dat, true = truetree$edge.length)
  }
  
  if (isDefined(node)) {
    transb <- which(startertree$edge[ ,1] %in% getDescs(startertree, node))
    trans <- rep("n", length(startertree$edge.length))
    trans[transb] <- "y"
    dat <- data.frame(dat, trans = trans)
  }
  
  # And now just a series of the plots, with the relevant if statements to turn them on or off. The important ones are the presence/absence of the node
  # number and the presence/absence of the true tree.
  
  
  
  
  return(dat)
}
























































################################################################################
#
#       ORIGINAL SCRIPT

#!/usr/bin/Rscript

################################################################################
###
# Post processing - Testing lambda, kappa, delta. 40 million generations,
#   long burnin (100,000).

setwd("/home/henry/Documents/hfg_work/tree-simulations/analysis/lkd_40mil")
rootdir <- getwd()

library(hfgr)
library(BTRTools)
library(ggplot2)
library(geiger)
library(phytools)
library(ape)
library(ggplot2)

# load startertree, and true tree.

setwd("../../treesdata")

startertree <- read.nexus("startertree200.tree")
truetreelam <- read.nexus("truetree200lam_0.2.tree")
truetreekap <- read.nexus("truetree200kap_0.2.tree")
truetreedel <- read.nexus("truetree200del_0.1.tree")

# NB: refer to data simulations script to identify which node was transformed.
node <- 318

################################################################################
#                                                                              #
#                                   LOG ONE                                    #
#                                                                              #
################################################################################

################################################################################
##
# LAMBDA

setwd(paste0(rootdir, "/logs-1/lambda"))

log <- "lam200_40mil.log"
rj <- read.nexus("lam200_40mil.log.VarRates.trees")
params <- getParams(log)

###
##
# DIAGNOSTICS.

# Lh and sigma

paramDiagnostic(log, pars = "Lh")
paramDiagnostic(log, pars = "Sigma.2.1")

# Write figs to disc.
pdf(file = path.expand("../../postprocess_figs/lam_lh_post_logs-1.pdf"), paper = "a4")
  paramDiagnostic(log, pars = "Lh")
dev.off()

pdf(file = path.expand("../../postprocess_figs/lam_sig_post_logs-1.pdf"), paper = "a4")
  paramDiagnostic(log, pars = "Sigma.2.1")
dev.off()

###
##
# COMPARE BRANCH LENGTHS.

# Identify transformed branches.

transb <- which(startertree$edge[ ,1] %in% getDescs(startertree, node))
trans <- rep("n", length(startertree$edge.length))
trans[transb] <- "y"

dat <- data.frame(starter = startertree$edge.length, true = truetreelam$edge.length,
  rj = meanBranches(rj), trans = trans)
  
# PLOT 1 - true vs RJ, with regression line.
lam_tvrj_lm <- ggplot(dat, aes(x = true, y = rj)) +
  geom_point(size = 3, colour = "dodgerblue") +
  geom_smooth(method = "lm") +
  geom_text(aes(x = 1, y = 4.5, label = lmEq(data.frame(x = dat$true, y = dat$rj))),
    parse = TRUE, size = 4) +
  ggtitle("True branch lengths vs. RJ estimated branch lengths (lambda)")
lam_tvrj_lm

# PLOT 2 - true vs RJ, with transformed branches coloured.
lam_tvrj_col <- ggplot(dat, aes(x = true, y = rj, colour = trans)) +
  geom_point(size = 3) +
  ggtitle("True branch lengths vs. RJ estimated branch lengths (lambda)")
lam_tvrj_col

# PLOT 3 - starter vs RJ, transformed branches coloured.
lam_svrj_col <- ggplot(dat, aes(x = starter, y = rj, colour = trans)) +
  geom_point(size = 3) +
  ggtitle("Starter branch lengths vs. RJ estimated branch lengths (lambda)")
lam_svrj_col

# PLOT 4 - starter vs true, transformed branches coloured.
lam_svt_col <- ggplot(dat, aes(x = starter, y = true, colour = trans)) +
  geom_point(size = 3) +
  ggtitle("Starter branch lengths vs. true branch lengths (lambda)")
lam_svt_col

# PLOTS 2, 3 and 4

multiplot(lam_tvrj_col, lam_svrj_col, lam_svt_col, cols = 2)

# Write to disc.
pdf(file = path.expand("../../postprocess_figs/lam_trueVrj_lm_logs-1.pdf"), paper = "a4")
  lam_tvrj_lm
dev.off()

pdf(file = path.expand("../../postprocess_figs/lam_trueVrj_col_logs-1.pdf"), paper = "a4")
  lam_tvrj_col
dev.off()

pdf(file = path.expand("../../postprocess_figs/lam_starterVrj_col_logs-1.pdf"), paper = "a4")
  lam_svrj_col
dev.off()

pdf(file = path.expand("../../postprocess_figs/lam_starterVtrue_col_logs-1.pdf"), paper = "a4")
  lam_svt_col
dev.off()

pdf(file = path.expand("../../postprocess_figs/lam_starter-true-rj_col_logs-1.pdf"), paper = "a4")
  multiplot(lam_tvrj_col, lam_svrj_col, lam_svt_col, cols = 2)
dev.off()


################################################################################
##
# KAPPA

setwd(paste0(rootdir, "/logs-1/kappa"))

log <- "kap200_40mil.log"
rj <- read.nexus("kap200_40mil.log.VarRates.trees")
params <- getParams(log)

###
##
# DIAGNOSTICS.

# Lh and sigma

paramDiagnostic(log, pars = "Lh")
paramDiagnostic(log, pars = "Sigma.2.1")

# Write figs to disc.
pdf(file = path.expand("../../postprocess_figs/kap_lh_post_logs-1.pdf"), paper = "a4")
  paramDiagnostic(log, pars = "Lh")
dev.off()

pdf(file = path.expand("../../postprocess_figs/kap_sig_post_logs-1.pdf"), paper = "a4")
  paramDiagnostic(log, pars = "Sigma.2.1")
dev.off()

###
##
# COMPARE BRANCH LENGTHS.

# Identify transformed branches.

transb <- which(startertree$edge[ ,1] %in% getDescs(startertree, node))
trans <- rep("n", length(startertree$edge.length))
trans[transb] <- "y"

dat <- data.frame(starter = startertree$edge.length, true = truetreekap$edge.length,
  rj = meanBranches(rj), trans = trans)
  
# PLOT 1 - true vs RJ, with regression line.
kap_tvrj_lm <- ggplot(dat, aes(x = true, y = rj)) +
  geom_point(size = 3, colour = "dodgerblue") +
  geom_smooth(method = "lm") +
  geom_text(aes(x = 1, y = 4.5, label = lmEq(data.frame(x = dat$true, y = dat$rj))),
    parse = TRUE, size = 4) +
  ggtitle("True branch lengths vs. RJ estimated branch lengths (kappa)")
kap_tvrj_lm

# PLOT 2 - true vs RJ, with transformed branches coloured.
kap_tvrj_col <- ggplot(dat, aes(x = true, y = rj, colour = trans)) +
  geom_point(size = 3) +
  ggtitle("True branch lengths vs. RJ estimated branch lengths (kappa)")
kap_tvrj_col

# PLOT 3 - starter vs RJ, transformed branches coloured.
kap_svrj_col <- ggplot(dat, aes(x = starter, y = rj, colour = trans)) +
  geom_point(size = 3) +
  ggtitle("Starter branch lengths vs. RJ estimated branch lengths (kappa)")
kap_svrj_col

# PLOT 4 - starter vs true, transformed branches coloured.
kap_svt_col <- ggplot(dat, aes(x = starter, y = true, colour = trans)) +
  geom_point(size = 3) +
  ggtitle("Starter branch lengths vs. true branch lengths (kappa)")
kap_svt_col

# PLOTS 2, 3 and 4

multiplot(kap_tvrj_col, kap_svrj_col, kap_svt_col, cols = 2)

# Write to disc.
pdf(file = path.expand("../../postprocess_figs/kap_trueVrj_lm_logs-1.pdf"), paper = "a4")
  kap_tvrj_lm
dev.off()

pdf(file = path.expand("../../postprocess_figs/kap_trueVrj_col_logs-1.pdf"), paper = "a4")
  kap_tvrj_col
dev.off()

pdf(file = path.expand("../../postprocess_figs/kap_starterVrj_col_logs-1.pdf"), paper = "a4")
  kap_svrj_col
dev.off()

pdf(file = path.expand("../../postprocess_figs/kap_starterVtrue_col_logs-1.pdf"), paper = "a4")
  kap_svt_col
dev.off()

pdf(file = path.expand("../../postprocess_figs/kap_starter-true-rj_col_logs-1.pdf"), paper = "a4")
  multiplot(kap_tvrj_col, kap_svrj_col, kap_svt_col, cols = 2)
dev.off()


################################################################################
##
# DELTA

setwd(paste0(rootdir, "/logs-1/delta"))

log <- "del200_40mil.log"
rj <- read.nexus("del200_40mil.log.VarRates.trees")
params <- getParams(log)

###
##
# DIAGNOSTICS.

# Lh and sigma

paramDiagnostic(log, pars = "Lh")
paramDiagnostic(log, pars = "Sigma.2.1")

# Write figs to disc.
pdf(file = path.expand("../../postprocess_figs/del_lh_post_logs-1.pdf"), paper = "a4")
  paramDiagnostic(log, pars = "Lh")
dev.off()

pdf(file = path.expand("../../postprocess_figs/del_sig_post_logs-1.pdf"), paper = "a4")
  paramDiagnostic(log, pars = "Sigma.2.1")
dev.off()

###
##
# COMPARE BRANCH LENGTHS.

# Identify transformed branches.

transb <- which(startertree$edge[ ,1] %in% getDescs(startertree, node))
trans <- rep("n", length(startertree$edge.length))
trans[transb] <- "y"

dat <- data.frame(starter = startertree$edge.length, true = truetreedel$edge.length,
  rj = meanBranches(rj), trans = trans)
  
# PLOT 1 - true vs RJ, with regression line.
del_tvrj_lm <- ggplot(dat, aes(x = true, y = rj)) +
  geom_point(size = 3, colour = "dodgerblue") +
  geom_smooth(method = "lm") +
  geom_text(aes(x = 1, y = 4.5, label = lmEq(data.frame(x = dat$true, y = dat$rj))),
    parse = TRUE, size = 4) +
  ggtitle("True branch lengths vs. RJ estimated branch lengths (delpa)")
del_tvrj_lm

# PLOT 2 - true vs RJ, with transformed branches coloured.
del_tvrj_col <- ggplot(dat, aes(x = true, y = rj, colour = trans)) +
  geom_point(size = 3) +
  ggtitle("True branch lengths vs. RJ estimated branch lengths (delpa)")
del_tvrj_col

# PLOT 3 - starter vs RJ, transformed branches coloured.
del_svrj_col <- ggplot(dat, aes(x = starter, y = rj, colour = trans)) +
  geom_point(size = 3) +
  ggtitle("Starter branch lengths vs. RJ estimated branch lengths (delpa)")
del_svrj_col

# PLOT 4 - starter vs true, transformed branches coloured.
del_svt_col <- ggplot(dat, aes(x = starter, y = true, colour = trans)) +
  geom_point(size = 3) +
  ggtitle("Starter branch lengths vs. true branch lengths (delpa)")
del_svt_col

# PLOTS 2, 3 and 4

multiplot(del_tvrj_col, del_svrj_col, del_svt_col, cols = 2)

# Write to disc.
pdf(file = path.expand("../../postprocess_figs/del_trueVrj_lm_logs-1.pdf"), paper = "a4")
  del_tvrj_lm
dev.off()

pdf(file = path.expand("../../postprocess_figs/del_trueVrj_col_logs-1.pdf"), paper = "a4")
  del_tvrj_col
dev.off()

pdf(file = path.expand("../../postprocess_figs/del_starterVrj_col_logs-1.pdf"), paper = "a4")
  del_svrj_col
dev.off()

pdf(file = path.expand("../../postprocess_figs/del_starterVtrue_col_logs-1.pdf"), paper = "a4")
  del_svt_col
dev.off()

pdf(file = path.expand("../../postprocess_figs/del_starter-true-rj_col._logs-1pdf"), paper = "a4")
  multiplot(del_tvrj_col, del_svrj_col, del_svt_col, cols = 2)
dev.off()


################################################################################
#                                                                              #
#                                   LOG TWO                                    #
#                                                                              #
################################################################################

################################################################################
##
# LAMBDA

setwd(paste0(rootdir, "/logs-2/lambda"))

log <- "lam200_40mil.log"
rj <- read.nexus("lam200_40mil.log.VarRates.trees")
params <- getParams(log)

###
##
# DIAGNOSTICS.

# Lh and sigma

paramDiagnostic(log, pars = "Lh")
paramDiagnostic(log, pars = "Sigma.2.1")

# Write figs to disc.
pdf(file = path.expand("../../postprocess_figs/lam_lh_post_logs-2.pdf"), paper = "a4")
  paramDiagnostic(log, pars = "Lh")
dev.off()

pdf(file = path.expand("../../postprocess_figs/lam_sig_post_logs-2.pdf"), paper = "a4")
  paramDiagnostic(log, pars = "Sigma.2.1")
dev.off()

###
##
# COMPARE BRANCH LENGTHS.

# Identify transformed branches.

transb <- which(startertree$edge[ ,1] %in% getDescs(startertree, node))
trans <- rep("n", length(startertree$edge.length))
trans[transb] <- "y"

dat <- data.frame(starter = startertree$edge.length, true = truetreelam$edge.length,
  rj = meanBranches(rj), trans = trans)
  
# PLOT 1 - true vs RJ, with regression line.
lam_tvrj_lm <- ggplot(dat, aes(x = true, y = rj)) +
  geom_point(size = 3, colour = "dodgerblue") +
  geom_smooth(method = "lm") +
  geom_text(aes(x = 1, y = 4.5, label = lmEq(data.frame(x = dat$true, y = dat$rj))),
    parse = TRUE, size = 4) +
  ggtitle("True branch lengths vs. RJ estimated branch lengths (lambda)")
lam_tvrj_lm

# PLOT 2 - true vs RJ, with transformed branches coloured.
lam_tvrj_col <- ggplot(dat, aes(x = true, y = rj, colour = trans)) +
  geom_point(size = 3) +
  ggtitle("True branch lengths vs. RJ estimated branch lengths (lambda)")
lam_tvrj_col

# PLOT 3 - starter vs RJ, transformed branches coloured.
lam_svrj_col <- ggplot(dat, aes(x = starter, y = rj, colour = trans)) +
  geom_point(size = 3) +
  ggtitle("Starter branch lengths vs. RJ estimated branch lengths (lambda)")
lam_svrj_col

# PLOT 4 - starter vs true, transformed branches coloured.
lam_svt_col <- ggplot(dat, aes(x = starter, y = true, colour = trans)) +
  geom_point(size = 3) +
  ggtitle("Starter branch lengths vs. true branch lengths (lambda)")
lam_svt_col

# PLOTS 2, 3 and 4

multiplot(lam_tvrj_col, lam_svrj_col, lam_svt_col, cols = 2)

# Write to disc.
pdf(file = path.expand("../../postprocess_figs/lam_trueVrj_lm_logs-2.pdf"), paper = "a4")
  lam_tvrj_lm
dev.off()

pdf(file = path.expand("../../postprocess_figs/lam_trueVrj_col_logs-2.pdf"), paper = "a4")
  lam_tvrj_col
dev.off()

pdf(file = path.expand("../../postprocess_figs/lam_starterVrj_col_logs-2.pdf"), paper = "a4")
  lam_svrj_col
dev.off()

pdf(file = path.expand("../../postprocess_figs/lam_starterVtrue_col_logs-2.pdf"), paper = "a4")
  lam_svt_col
dev.off()

pdf(file = path.expand("../../postprocess_figs/lam_starter-true-rj_col_logs-2.pdf"), paper = "a4")
  multiplot(lam_tvrj_col, lam_svrj_col, lam_svt_col, cols = 2)
dev.off()


################################################################################
##
# KAPPA

setwd(paste0(rootdir, "/logs-2/kappa"))

log <- "kap200_40mil.log"
rj <- read.nexus("kap200_40mil.log.VarRates.trees")
params <- getParams(log)

###
##
# DIAGNOSTICS.

# Lh and sigma

paramDiagnostic(log, pars = "Lh")
paramDiagnostic(log, pars = "Sigma.2.1")

# Write figs to disc.
pdf(file = path.expand("../../postprocess_figs/kap_lh_post_logs-2.pdf"), paper = "a4")
  paramDiagnostic(log, pars = "Lh")
dev.off()

pdf(file = path.expand("../../postprocess_figs/kap_sig_post_logs-2.pdf"), paper = "a4")
  paramDiagnostic(log, pars = "Sigma.2.1")
dev.off()

###
##
# COMPARE BRANCH LENGTHS.

# Identify transformed branches.

transb <- which(startertree$edge[ ,1] %in% getDescs(startertree, node))
trans <- rep("n", length(startertree$edge.length))
trans[transb] <- "y"

dat <- data.frame(starter = startertree$edge.length, true = truetreekap$edge.length,
  rj = meanBranches(rj), trans = trans)
  
# PLOT 1 - true vs RJ, with regression line.
kap_tvrj_lm <- ggplot(dat, aes(x = true, y = rj)) +
  geom_point(size = 3, colour = "dodgerblue") +
  geom_smooth(method = "lm") +
  geom_text(aes(x = 1, y = 4.5, label = lmEq(data.frame(x = dat$true, y = dat$rj))),
    parse = TRUE, size = 4) +
  ggtitle("True branch lengths vs. RJ estimated branch lengths (kappa)")
kap_tvrj_lm

# PLOT 2 - true vs RJ, with transformed branches coloured.
kap_tvrj_col <- ggplot(dat, aes(x = true, y = rj, colour = trans)) +
  geom_point(size = 3) +
  ggtitle("True branch lengths vs. RJ estimated branch lengths (kappa)")
kap_tvrj_col

# PLOT 3 - starter vs RJ, transformed branches coloured.
kap_svrj_col <- ggplot(dat, aes(x = starter, y = rj, colour = trans)) +
  geom_point(size = 3) +
  ggtitle("Starter branch lengths vs. RJ estimated branch lengths (kappa)")
kap_svrj_col

# PLOT 4 - starter vs true, transformed branches coloured.
kap_svt_col <- ggplot(dat, aes(x = starter, y = true, colour = trans)) +
  geom_point(size = 3) +
  ggtitle("Starter branch lengths vs. true branch lengths (kappa)")
kap_svt_col

# PLOTS 2, 3 and 4

multiplot(kap_tvrj_col, kap_svrj_col, kap_svt_col, cols = 2)

# Write to disc.
pdf(file = path.expand("../../postprocess_figs/kap_trueVrj_lm_logs-2.pdf"), paper = "a4")
  kap_tvrj_lm
dev.off()

pdf(file = path.expand("../../postprocess_figs/kap_trueVrj_col_logs-2.pdf"), paper = "a4")
  kap_tvrj_col
dev.off()

pdf(file = path.expand("../../postprocess_figs/kap_starterVrj_col_logs-2.pdf"), paper = "a4")
  kap_svrj_col
dev.off()

pdf(file = path.expand("../../postprocess_figs/kap_starterVtrue_col_logs-2.pdf"), paper = "a4")
  kap_svt_col
dev.off()

pdf(file = path.expand("../../postprocess_figs/kap_starter-true-rj_col_logs-2.pdf"), paper = "a4")
  multiplot(kap_tvrj_col, kap_svrj_col, kap_svt_col, cols = 2)
dev.off()


################################################################################
##
# DELTA

setwd(paste0(rootdir, "/logs-2/delta"))

log <- "del200_40mil.log"
rj <- read.nexus("del200_40mil.log.VarRates.trees")
params <- getParams(log)

###
##
# DIAGNOSTICS.

# Lh and sigma

paramDiagnostic(log, pars = "Lh")
paramDiagnostic(log, pars = "Sigma.2.1")

# Write figs to disc.
pdf(file = path.expand("../../postprocess_figs/del_lh_post_logs-2.pdf"), paper = "a4")
  paramDiagnostic(log, pars = "Lh")
dev.off()

pdf(file = path.expand("../../postprocess_figs/del_sig_post_logs-2.pdf"), paper = "a4")
  paramDiagnostic(log, pars = "Sigma.2.1")
dev.off()

###
##
# COMPARE BRANCH LENGTHS.

# Identify transformed branches.

transb <- which(startertree$edge[ ,1] %in% getDescs(startertree, node))
trans <- rep("n", length(startertree$edge.length))
trans[transb] <- "y"

dat <- data.frame(starter = startertree$edge.length, true = truetreedel$edge.length,
  rj = meanBranches(rj), trans = trans)
  
# PLOT 1 - true vs RJ, with regression line.
del_tvrj_lm <- ggplot(dat, aes(x = true, y = rj)) +
  geom_point(size = 3, colour = "dodgerblue") +
  geom_smooth(method = "lm") +
  geom_text(aes(x = 1, y = 4.5, label = lmEq(data.frame(x = dat$true, y = dat$rj))),
    parse = TRUE, size = 4) +
  ggtitle("True branch lengths vs. RJ estimated branch lengths (delpa)")
del_tvrj_lm

# PLOT 2 - true vs RJ, with transformed branches coloured.
del_tvrj_col <- ggplot(dat, aes(x = true, y = rj, colour = trans)) +
  geom_point(size = 3) +
  ggtitle("True branch lengths vs. RJ estimated branch lengths (delpa)")
del_tvrj_col

# PLOT 3 - starter vs RJ, transformed branches coloured.
del_svrj_col <- ggplot(dat, aes(x = starter, y = rj, colour = trans)) +
  geom_point(size = 3) +
  ggtitle("Starter branch lengths vs. RJ estimated branch lengths (delpa)")
del_svrj_col

# PLOT 4 - starter vs true, transformed branches coloured.
del_svt_col <- ggplot(dat, aes(x = starter, y = true, colour = trans)) +
  geom_point(size = 3) +
  ggtitle("Starter branch lengths vs. true branch lengths (delpa)")
del_svt_col

# PLOTS 2, 3 and 4

multiplot(del_tvrj_col, del_svrj_col, del_svt_col, cols = 2)

# Write to disc.
pdf(file = path.expand("../../postprocess_figs/del_trueVrj_lm_logs-2.pdf"), paper = "a4")
  del_tvrj_lm
dev.off()

pdf(file = path.expand("../../postprocess_figs/del_trueVrj_col_logs-2.pdf"), paper = "a4")
  del_tvrj_col
dev.off()

pdf(file = path.expand("../../postprocess_figs/del_starterVrj_col_logs-2.pdf"), paper = "a4")
  del_svrj_col
dev.off()

pdf(file = path.expand("../../postprocess_figs/del_starterVtrue_col_logs-2.pdf"), paper = "a4")
  del_svt_col
dev.off()

pdf(file = path.expand("../../postprocess_figs/del_starter-true-rj_col_logs-2.pdf"), paper = "a4")
  multiplot(del_tvrj_col, del_svrj_col, del_svt_col, cols = 2)
dev.off()


################################################################################
#                                                                              #
#                           COMPARE TO NO RJ                                   #
#                                                                              #
################################################################################








